{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducers.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","startLoading","loadNotes","uid","a","collection","orderBy","get","notesSnap","notes","forEach","snapHijo","push","id","data","console","log","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","formValues","loading","useSelector","state","ui","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ffd9bee3.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDK7v7mMcAeg0XVMe6AlZg-Z308snU0T0M\",\r\n    authDomain: \"react-ferher-journal.firebaseapp.com\",\r\n    projectId: \"react-ferher-journal\",\r\n    storageBucket: \"react-ferher-journal.appspot.com\",\r\n    messagingSenderId: \"634721132468\",\r\n    appId: \"1:634721132468:web:d2f151c34be2feda1a5ce1\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig); \r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","//action types\r\n\r\nexport const types = {\r\n\r\n    // Login\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    // Register\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    // Loading state\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    // Notes\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}\r\n","import { types } from '../types/types';\r\n\r\n// al ser acciones síncronas no necesitan return\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\n// Loading Login actions\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { db } from '../firebase/firebase-config';\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).orderBy('date', 'desc').get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n    console.log(notes)\r\n    return notes;\r\n}","\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/jprogram/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file)\r\n    \r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n","// ******************** Acciones asíncrones se nombran con \"start\" ****************\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { db } from '../firebase/firebase-config';\r\n\r\nimport { types } from '../types/types';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\n// Guardar nota nueva\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        //console.log(doc);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n\r\n    }\r\n}\r\n\r\n// Activa pantalla de entrada de nota\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note // spread propiedades de NewNote\r\n    }\r\n});\r\n\r\n// Refresca lista de notas agregando las nuevas entradas\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\n\r\n// Trae las notas de firestore\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n// Actualiza nota actual\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        // clono para no modificar note original accidentalmente\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore); // note.id del argumento\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore)); // Acción para actualizar únicamente la nota modificada, traída del store. Si usara startLoadingNotes() actualizaría todas las notas innecesariamente.\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\n// Subir foto a Claudinary\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\n// Borra nota\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete(); // borro nota de firestore\r\n\r\n        dispatch(deleteNote(id)); // borro nota del store\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport {startLoading, finishLoading} from \"./ui\";\r\nimport { noteLogout } from './notes';\r\n\r\n// thunk permite retornar una función (callback)\r\n// se pueden realizar varios dispatch dentro de la función\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    \r\n    // thunk retorna el dispatch\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({ user }) => {\r\n                \r\n                // debo llamar un dispatch una vez que se ejecute todo y tenga la data \r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch( e => {\r\n\r\n                dispatch(startLoading());\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n       \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return(dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password) // .createUserWith.. loguea automáticamente en firebase\r\n        .then( async ({ user }) => {\r\n\r\n            // guarda nombre en firebase\r\n            await user.updateProfile({displayName: name });\r\n\r\n            //console.log(user);\r\n\r\n            // llamo dispatch mediante thunk luego de realizar tareas asíncronas\r\n            dispatch(\r\n                login( user.uid, user.displayName )\r\n            )\r\n        })\r\n        .catch( e => {\r\n            console.log(e);\r\n            Swal.fire('Error', e.message, 'error');\r\n        })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\n// retorna una accion\r\nexport const login = (uid, displayName) => {\r\n\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\n// Forma resumida\r\n/* export const login = (uid, displayName) => ({\r\n    \r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n    \r\n}) */\r\n\r\n// ******* Logout *******\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout()); // Limpia lista de notas del usuario\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    // Hook de Redux. Permite hacer dispatch de acciones en cualquier lugar donde se encuentre el componente LoginScreen\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formValues, handleInputChange] = useForm({\r\n        email: 'joako@gmail.com',\r\n        password: '123456'\r\n    })\r\n\r\n    const { loading } = useSelector(state => state.ui);\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword(email, password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form\r\n                onSubmit = { handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value = { email }\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value = { password }\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled= { loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account    \r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // extrae info del store\r\n    const { msgError } = useSelector(state => state.ui);\r\n    //console.log(state);\r\n\r\n    const [ values, handleInputChange ]= useForm({\r\n        name: 'Joako',\r\n        email: 'joako@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = values;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(isFormValid()) {\r\n            //console.log('Formulario correcto');\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n        }\r\n\r\n        //console.log(name, email, password, password2);\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n\r\n            //console.log('Name is required');\r\n            dispatch(setError('Name is required'));    \r\n            return false;\r\n\r\n        } else if (!validator.isEmail(email)){\r\n\r\n            //console.log('Email is not valid');\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n\r\n        } else if (password !== password2 || password.length < 5) {\r\n\r\n            //console.log('Password should be at least 6 characters and match each other.')\r\n            dispatch(setError('Password should be at least 6 characters and match each other.'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form\r\n                onSubmit= { handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                \r\n                {\r\n                    msgError &&\r\n                    (<div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>)\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange= { handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange= { handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange= { handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange= { handleInputChange }\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n               \r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\n// Contiene las páginas relacionadas al auth\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n\r\n                    <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (    /* props = history, location y params */\r\n                ( isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/auth/login\" />\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }  // le paso todo el resto de las propiedades\r\n            component={ (props) => (    /* props = history, location y params */\r\n                ( isAuthenticated )\r\n                    ? <Redirect to=\"/\" />\r\n                    : <Component { ...props } />\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\nimport moment from 'moment'\nimport { activeNote } from '../../actions/notes';\nimport { useDispatch } from 'react-redux';\n\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch(activeNote(id, { date, title, body, url}))\n    }\n\n    return (\n        <div\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\n            onClick={  handleEntryClick }\n        >\n            \n            {\n                url &&\n                <div \n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\">\n                    { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd') }</span>\n                <h4> { noteDate.format('Do') } </h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\n// La ventaja de usar Redux es que no necesito enviar props a los componentes ya que puedo extraer la info del store\nexport const JournalEntries = () => {\n\n    const {notes} = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry\n                        key={ note.id }\n                        {...note}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name }</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\nimport moment from 'moment';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const date = moment().format('MMMM Do YYYY');\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click(); // simulo click en input\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ date }</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button\r\n                    onClick={handlePictureClick}\r\n                    className=\"btn\">\r\n                    Picture\r\n                </button>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes)\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { id, title, body } = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    // disparar solo si note.id cambia\r\n    useEffect(() => {\r\n\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    // solucion sin useEffect ni useRef\r\n    /*  if(note.id !== formValues.id) {\r\n         reset(note);\r\n      } */\r\n\r\n\r\n    // Actualiza nota activa en el state a medida que escribo\r\n    useEffect(() => {\r\n\r\n        dispatch(activeNote(formValues.id, { ...formValues }));\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                    name=\"body\"\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={ note.url }\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className='btn btn-danger'\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { useSelector } from 'react-redux';\r\nimport { NothingSelected } from './NothingSelected';\r\n\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    // hook para extraer datos del store\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    ( active ) /* \"si active contiene algo\" */\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { firebase } from '../firebase/firebase-config';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport {startLoadingNotes } from '../actions/notes';\r\n\r\n// Contiene las rutas principales\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // useState para tiempo de espera del checking\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    // para saber si está logueado\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n\r\n            if( user?.uid ) {   // si el objeto user tiene algo, entonces pregunta si existe el uid\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes( user.uid ));\r\n\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false); // cuando tengo la respuesta de que ya está autenticado el user\r\n\r\n        });\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn]) // Coloco dispatch como dependencia para evitar alerta por consola. Pero el dispatch no cambia realmente. useEffect debe ejecutarse sólo la primera vez y luego el observable (que devuelve .onAuthStateChanged) es el que se encarga de estar pendiente de los cambios en el logueo de user.\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n\r\n        // Register Errors\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        // Loading Login states\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;  \r\n\r\n    }\r\n}   \r\n","// Modifica store\r\n/*\r\n\r\n{\r\n    notes: [],\r\n    active: null,\r\n    active: {\r\n        id: 'FSDGSDGDSBHSD',\r\n        title: '',\r\n        body: '',\r\n        imageUrl: '',\r\n        date: 1654646,\r\n    }\r\n}\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null, // purgo nota activa\r\n                notes: state.notes.filter(note => note.id !== action.payload) // saco nota de la lista\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducers';\r\n\r\n// React Dev Tools: https://github.com/zalmoxisus/redux-devtools-extension#usage. Config para poder aplicar varios middlewares\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n// Si store solo recibe un reducer, no es obligatorio usar combine reducers.\r\n// Igualmente conviene usar siempre combineReducers (aunque tenga un sólo reducer) para no tener que refactorizar luego.\r\n\r\n\r\n// paso los reducers por aquí para luego enviar al store\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\n// solo recibe un reducer\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(   // config del store\r\n        applyMiddleware( thunk )    // acciones asíncronas\r\n    ) \r\n);","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = ( state={}, action ) => {\r\n    \r\n    switch (action.type) {\r\n        \r\n        case types.login:\r\n\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            \r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss'\nimport { JournalApp } from './JournalApp';\n\n\nReactDOM.render(\n  \n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}